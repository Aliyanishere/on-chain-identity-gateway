/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FlexibleNonceForwarder,
  FlexibleNonceForwarderInterface,
} from "../../contracts/FlexibleNonceForwarder";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockAgeTolerance",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "expectedSigner",
        type: "address",
      },
    ],
    name: "FlexibleNonceForwarder__InvalidSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "FlexibleNonceForwarder__TxAlreadySeen",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockAgeTolerance",
        type: "uint256",
      },
    ],
    name: "FlexibleNonceForwarder__TxTooOld",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "ForwardResult",
    type: "event",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IForwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101806040523480156200001257600080fd5b50604051620014b4380380620014b48339810160408190526200003591620001cf565b604080518082018252601681527f466c657869626c654e6f6e6365466f727761726465720000000000000000000060208083019190915282518084019093526005835264302e302e3160d81b9083015290620000938260006200014a565b61012052620000a48160016200014a565b61014052815160208084019190912060e052815190820120610100524660a0526200013260e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052600160025561016052620003cf565b60006020835110156200016a57620001628362000183565b90506200017d565b816200017784826200028e565b5060ff90505b92915050565b600080829050601f81511115620001ba578260405163305a27a960e01b8152600401620001b191906200035a565b60405180910390fd5b8051620001c782620003aa565b179392505050565b600060208284031215620001e257600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200021457607f821691505b6020821081036200023557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200028957600081815260208120601f850160051c81016020861015620002645750805b601f850160051c820191505b81811015620002855782815560010162000270565b5050505b505050565b81516001600160401b03811115620002aa57620002aa620001e9565b620002c281620002bb8454620001ff565b846200023b565b602080601f831160018114620002fa5760008415620002e15750858301515b600019600386901b1c1916600185901b17855562000285565b600085815260208120601f198616915b828110156200032b578886015182559484019460019091019084016200030a565b50858210156200034a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b8181101562000389578581018301518582016040015282016200036b565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620002355760001960209190910360031b1b16919050565b60805160a05160c05160e051610100516101205161014051610160516110786200043c600039600081816105a4015261063f0152600061024d0152600061022301526000610a6101526000610a3901526000610994015260006109be015260006109e801526110786000f3fe6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f821461008257806384b0196e146100a3575b600080fd5b34801561004557600080fd5b5061006f610054366004610d23565b6001600160a01b031660009081526003602052604090205490565b6040519081526020015b60405180910390f35b610095610090366004610d53565b6100cb565b604051610079929190610e42565b3480156100af57600080fd5b506100b8610215565b6040516100799796959493929190610e65565b600060606100d761029d565b6100e28585856102f9565b6100eb85610705565b6000806100fe6040880160208901610d23565b6001600160a01b03166060880135604089013561011e60a08b018b610efb565b61012b60208d018d610d23565b60405160200161013d93929190610f42565b60408051601f198184030181529082905261015791610f68565b600060405180830381858888f193505050503d8060008114610195576040519150601f19603f3d011682016040523d82523d6000602084013e61019a565b606091505b5090925090508115156000036101b257805160208201fd5b6101c160406060890135610f9a565b5a116101c957fe5b60405182151581527fed0603e97c834a591ced7b3c6ce727a087f9d1748098dc815b12a2516993d68c9060200160405180910390a1909250905061020d6001600255565b935093915050565b6000606080828080836102487f00000000000000000000000000000000000000000000000000000000000000008361072c565b6102737f0000000000000000000000000000000000000000000000000000000000000000600161072c565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60028054036102f35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60028055565b600061040b83838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061040592507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e48915061036890506020890189610d23565b61037860408a0160208b01610d23565b60408a013560608b013560808c013561039460a08e018e610efb565b6040516103a2929190610fbc565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e081019190915261010001604051602081830303815290604052805190602001206107d9565b90610806565b905061041a6020850185610d23565b6001600160a01b0316816001600160a01b03161461046c57806104406020860186610d23565b604051635e4cf60960e11b81526001600160a01b039283166004820152911660248201526044016102ea565b6080840135600360006104826020880188610d23565b6001600160a01b0316815260208101919091526040016000205403610514576104b060808501356001610fcc565b600360006104c16020880188610d23565b6001600160a01b0316815260208082019290925260400160009081209290925543916003916104f290880188610d23565b6001600160a01b03168152602081019190915260400160002060010155610681565b600360006105256020870187610d23565b6001600160a01b03166001600160a01b031681526020019081526020016000206002016000856080013581526020019081526020016000206000018383604051610570929190610fbc565b9081526040519081900360200190205460ff16156105a157604051630c3294e760e41b815260040160405180910390fd5b437f0000000000000000000000000000000000000000000000000000000000000000600360006105d46020890189610d23565b6001600160a01b03166001600160a01b03168152602001908152602001600020600101546106029190610fcc565b101561068157600360006106196020870187610d23565b6001600160a01b03166001600160a01b03168152602001908152602001600020600101547f00000000000000000000000000000000000000000000000000000000000000006040516264f5c360e21b81526004016102ea929190918252602082015260400190565b6001600360006106946020880188610d23565b6001600160a01b03166001600160a01b0316815260200190815260200160002060020160008660800135815260200190815260200160002060000184846040516106df929190610fbc565b908152604051908190036020019020805491151560ff1990921691909117905550505050565b806040013534111561072957610729610722604083013534610fdf565b339061082a565b50565b606060ff83146107465761073f83610948565b90506107d3565b81805461075290610ff2565b80601f016020809104026020016040519081016040528092919081815260200182805461077e90610ff2565b80156107cb5780601f106107a0576101008083540402835291602001916107cb565b820191906000526020600020905b8154815290600101906020018083116107ae57829003601f168201915b505050505090505b92915050565b60006107d36107e6610987565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060006108158585610ab7565b9150915061082281610afc565b509392505050565b8047101561087a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016102ea565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146108c7576040519150601f19603f3d011682016040523d82523d6000602084013e6108cc565b606091505b50509050806109435760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016102ea565b505050565b6060600061095583610c41565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156109e057507f000000000000000000000000000000000000000000000000000000000000000046145b15610a0a57507f000000000000000000000000000000000000000000000000000000000000000090565b610ab2604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b905090565b6000808251604103610aed5760208301516040840151606085015160001a610ae187828585610c69565b94509450505050610af5565b506000905060025b9250929050565b6000816004811115610b1057610b1061102c565b03610b185750565b6001816004811115610b2c57610b2c61102c565b03610b745760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b60448201526064016102ea565b6002816004811115610b8857610b8861102c565b03610bd55760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016102ea565b6003816004811115610be957610be961102c565b036107295760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016102ea565b600060ff8216601f8111156107d357604051632cd44ac360e21b815260040160405180910390fd5b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115610c965750600090506003610d1a565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610cea573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610d1357600060019250925050610d1a565b9150600090505b94509492505050565b600060208284031215610d3557600080fd5b81356001600160a01b0381168114610d4c57600080fd5b9392505050565b600080600060408486031215610d6857600080fd5b833567ffffffffffffffff80821115610d8057600080fd5b9085019060c08288031215610d9457600080fd5b90935060208501359080821115610daa57600080fd5b818601915086601f830112610dbe57600080fd5b813581811115610dcd57600080fd5b876020828501011115610ddf57600080fd5b6020830194508093505050509250925092565b60005b83811015610e0d578181015183820152602001610df5565b50506000910152565b60008151808452610e2e816020860160208601610df2565b601f01601f19169290920160200192915050565b8215158152604060208201526000610e5d6040830184610e16565b949350505050565b60ff60f81b881681526000602060e081840152610e8560e084018a610e16565b8381036040850152610e97818a610e16565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015610ee957835183529284019291840191600101610ecd565b50909c9b505050505050505050505050565b6000808335601e19843603018112610f1257600080fd5b83018035915067ffffffffffffffff821115610f2d57600080fd5b602001915036819003821315610af557600080fd5b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b60008251610f7a818460208701610df2565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b600082610fb757634e487b7160e01b600052601260045260246000fd5b500490565b8183823760009101908152919050565b808201808211156107d3576107d3610f84565b818103818111156107d3576107d3610f84565b600181811c9082168061100657607f821691505b60208210810361102657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220ba37234204e09c76b37299f5308289a91adc5da6b3efac8c45a94542fea1200964736f6c63430008130033";

type FlexibleNonceForwarderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlexibleNonceForwarderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlexibleNonceForwarder__factory extends ContractFactory {
  constructor(...args: FlexibleNonceForwarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    blockAgeTolerance: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(blockAgeTolerance, overrides || {});
  }
  override deploy(
    blockAgeTolerance: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(blockAgeTolerance, overrides || {}) as Promise<
      FlexibleNonceForwarder & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): FlexibleNonceForwarder__factory {
    return super.connect(runner) as FlexibleNonceForwarder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlexibleNonceForwarderInterface {
    return new Interface(_abi) as FlexibleNonceForwarderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FlexibleNonceForwarder {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as FlexibleNonceForwarder;
  }
}
